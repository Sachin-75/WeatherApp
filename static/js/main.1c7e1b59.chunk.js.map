{"version":3,"sources":["components/Tempapp.js","App.js","reportWebVitals.js","index.js"],"names":["Tempapp","city","setCity","useState","weather","setWeather","error","setError","apiUri","concat","React","createElement","className","type","value","onChange","e","target","console","log","name","id","placeholder","onClick","async","response","fetch","jsonOutput","json","ok","FaSearch","src","icon","alt","description","main","temp","MdLocationOn","sys","country","temp_min","temp_max","Wavify","fill","options","height","amplitude","speed","points","App","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iNAyGeA,MAnGCA,KAEZ,MAAOC,EAAMC,GAAWC,mBAAS,KAE1BC,EAASC,GAAcF,sBACvBG,EAAOC,GAAYJ,mBAAS,IAI7BK,EAAM,qDAAAC,OAAwDR,EAAI,wBAAAQ,OAFxD,oCA4BlB,OACEC,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,SAAOE,KAAK,OAAOC,MAAOb,EAAMc,SA1BlBC,IAClBd,EAAQc,EAAEC,OAAOH,OACjBI,QAAQC,IAAIH,EAAEC,OAAOH,QAwBuCM,KAAK,GAAGC,GAAG,GAAGC,YAAY,eACjFZ,IAAAC,cAAA,UAAQY,QAtBCC,UACd,IACI,IAAIC,QAAiBC,MAAMlB,GACvBmB,QAAmBF,EAASG,OAC7BH,EAASI,IACRxB,EAAWsB,GACXpB,EAAS,IACTW,QAAQC,IAAIQ,KAEZpB,EAAS,iBACTF,EAAW,OAGjB,MAAOC,GACLY,QAAQC,IAAIb,MASRI,IAAAC,cAACmB,IAAQ,QAIbxB,IAAUF,GAAWM,IAAAC,cAAA,KAAGC,UAAU,YAAYN,GAG9CF,GAAWA,EAAQA,SACnBM,IAAAC,cAAA,OAAKC,UAAU,QAIXF,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,OAAKoB,IAAG,qCAAAtB,OAAuCL,EAAQA,QAAQ,GAAG4B,KAAI,WAAWC,IAAI,KACrFvB,IAAAC,cAAA,MAAIC,UAAU,QAAQR,EAAQA,QAAQ,GAAG8B,cAG7CxB,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAKP,EAAQ+B,KAAKC,KAAK1B,IAAAC,cAAA,YAAM,WAEjCD,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAC0B,IAAY,OAEjB3B,IAAAC,cAAA,SAAIP,EAAQgB,KAAK,IAACV,IAAAC,cAAA,YAAOP,EAAQkC,IAAIC,WAGzC7B,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,MAAIC,UAAU,eAAc,YAC5BF,IAAAC,cAAA,MAAIC,UAAU,aACTR,EAAQ+B,KAAKK,SAAS,IAAC9B,IAAAC,cAAA,YAAM,WAGtCD,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,MAAIC,UAAU,eAAc,YAC5BF,IAAAC,cAAA,MAAIC,UAAU,aACTR,EAAQ+B,KAAKM,SAAS/B,IAAAC,cAAA,YAAM,YAIzCD,IAAAC,cAAC+B,IAAM,CACHC,KAAK,UACLC,QAAS,CACLC,OAAQ,GACRC,UAAW,GACXC,MAAO,IACPC,OAAQ,GAEZpC,UAAU,aCtFfqC,MAPf,WACE,OACEvC,IAAAC,cAAAD,IAAAwC,SAAA,KACExC,IAAAC,cAACX,EAAO,QCMCmD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAtC,EAAA,GAAAuC,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,IAAAC,cAACD,IAAM0D,WAAU,KACf1D,IAAAC,cAACsC,EAAG,QAORE","file":"static/js/main.1c7e1b59.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './styleApp.css';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { MdLocationOn } from 'react-icons/md';\r\nimport Wavify from 'react-wavify';\r\n\r\nconst Tempapp = () => {\r\n\r\n    const [city, setCity] = useState('');\r\n\r\n    const [weather, setWeather] = useState();\r\n    const [error, setError] = useState('');\r\n\r\n    const API_KEY = \"2e1c1ba65608bf22668aa2ce55a928db\";\r\n\r\n    const apiUri = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`;\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        setCity(e.target.value);\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    const fetchData = async() =>{\r\n        try {\r\n            let response = await fetch(apiUri);\r\n            let jsonOutput = await response.json();\r\n            if(response.ok){\r\n                setWeather(jsonOutput);\r\n                setError('');\r\n                console.log(jsonOutput);\r\n            } else {\r\n                setError('No data found');\r\n                setWeather(null);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className='container'>\r\n        <div className=\"cityName\">\r\n            <input type=\"text\" value={city} onChange={handleChange} name=\"\" id=\"\" placeholder='Enter City'/>\r\n             <button onClick={fetchData}>\r\n                <FaSearch></FaSearch>\r\n             </button>\r\n        </div>\r\n        {\r\n            error && !weather && <p className=\"errorMsg\">{error}</p>\r\n        }\r\n        {\r\n            weather && weather.weather && \r\n            <div className=\"cont\">\r\n                 \r\n\r\n\r\n                <div className=\"img\">\r\n                    <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"\" />\r\n                    <h1 className=\"main\">{weather.weather[0].description}</h1>\r\n\r\n                </div>\r\n                <div className=\"temp\">\r\n                    <h2>Temp : </h2>\r\n                    <h2>{weather.main.temp}<span>&deg;C</span></h2>\r\n                </div>\r\n                <div className=\"cityLocation\">\r\n                    <div className=\"location\">\r\n                        <MdLocationOn></MdLocationOn>\r\n                    </div>\r\n                    <p>{weather.name},<span>{weather.sys.country}</span></p>\r\n                </div>\r\n\r\n                <div className=\"weather-stats\">\r\n                    <div className=\"temp-min\">\r\n                        <h3 className=\"min-heading\">Min Temp</h3>\r\n                        <h3 className=\"min-value\">\r\n                            {weather.main.temp_min} <span>&deg;C</span> \r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"temp-max\">\r\n                        <h3 className=\"max-heading\">Max Temp</h3>\r\n                        <h3 className=\"max-value\">\r\n                            {weather.main.temp_max}<span>&deg;C</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <Wavify \r\n                    fill=\"#40a2e3\"\r\n                    options={{\r\n                        height: 20,\r\n                        amplitude: 40,\r\n                        speed: 0.15,\r\n                        points: 3\r\n                    }}\r\n                    className=\"waves\"\r\n                />\r\n                \r\n            </div>\r\n            \r\n        }\r\n    </div>\r\n  )\r\n}\r\nexport default Tempapp;\r\n","import React from \"react\";\nimport Tempapp from \"./components/Tempapp\";\n\nfunction App() {\n  return (\n    <>\n      <Tempapp />\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}